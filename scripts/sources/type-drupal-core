##
# Setup for drupal core.
#
# Available globals:
#  S_ID       Submission id.
#  S_GITURL   Project git url.
#  S_TYPE     Project type.
#  S_VERSION  Project version.
#  S_PROJECT  Project shortname.
##

##
# Download project.
s_project_download() {
  # Fetch project.
  lg "Fetch drupal core project.."
  # We'll directly clone it into the www directory, so delete it for git.
  rm -rf "/home/$S_ID/www"
  # Now clone it.
  s_fetch_project "$S_PROJECT" "$S_GITURL" "/home/$S_ID/www"
  # Create a sites/all directory for drush 6 with drupal 8.
  mkdir "/home/$S_ID/www/sites/all"

  # Checkout specified version and remove .git.
  lg "Set version.."
  s_set_version "/home/$S_ID/www" $S_VERSION
}

##
# Fetch project dependecies.
s_project_fetch_dependencies() {
  : # No dependencies to fetch for a core project.
}

##
# Install project.
s_project_install() {
  # Setup database.
  lg "Setup database.."
  s_db_setup $S_ID

  # Try to find out core version.
  lg "Find out coreversion.."
  S_COREVERSION=$(s_get_coreversion)
  lg "-> coreversion: $S_COREVERSION"

  # Decide the PHP version to use based on the core version.
  if [ "$S_COREVERSION" == "8" ]; then
    ln -s $S_PHP_DIR_5_5 /home/$S_ID/php
  else
    ln -s $S_PHP_DIR_5_3 /home/$S_ID/php
  fi

  # Write CGI wrapper (necessary for secure apache/cgi user change by suExec).
  mkdir /var/www/wrappers/$S_ID
  chown $S_ID /var/www/wrappers/$S_ID
  chgrp nogroup /var/www/wrappers/$S_ID
  echo "#!/bin/bash
    umask 022
    PHPRC=/home/$S_ID
    export PHPRC
    exec timeout 300 /home/$S_ID/php/php" > "/var/www/wrappers/$S_ID/php"
  chmod +x "/var/www/wrappers/$S_ID/php"
  chown $S_ID /var/www/wrappers/$S_ID/php
  chgrp nogroup /var/www/wrappers/$S_ID/php

  # Install drupal in docroot.
  lg "Install drupal core.."
  s_install_drupal $S_COREVERSION $S_VERSION
}
